Source: libhash-merge-perl
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Martin Zobel-Helas <zobel@debian.org>
Section: perl
Testsuite: autopkgtest-pkg-perl
Priority: optional
Build-Depends: debhelper-compat (= 13)
Build-Depends-Indep: libclone-choose-perl <!nocheck>,
                     perl
Standards-Version: 4.5.0
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libhash-merge-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libhash-merge-perl.git
Homepage: https://metacpan.org/release/Hash-Merge
Rules-Requires-Root: no

Package: libhash-merge-perl
Architecture: all
Depends: ${misc:Depends},
         ${perl:Depends},
         libclone-choose-perl
Description: Perl module for merging arbitrarily deep hashes into a single hash
 Hash::Merge merges two arbitrarily deep hashes into a single hash.  That
 is, at any level, it will add non-conflicting key-value pairs from one
 hash to the other, and follows a set of specific rules when there are key
 value conflicts (as outlined below).  The hash is followed recursively,
 so that deeply nested hashes that are at the same level will be merged
 when the parent hashes are merged.  Please note that self-referencing
 hashes, or recursive references, are not handled well by this method.
 .
 Values in hashes are considered to be either ARRAY references,
 HASH references, or otherwise are treated as SCALARs.  By default, the
 data passed to the merge function will be cloned using the Clone module;
 however, if necessary, this behavior can be changed to use as many of
 the original values as possible.  (See set_clone_behavior).
